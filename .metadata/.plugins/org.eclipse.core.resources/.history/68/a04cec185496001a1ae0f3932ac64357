package TaiKhoan;

import java.io.IOException;
import java.rmi.RemoteException;
import java.util.EventObject;
import java.util.ResourceBundle;

import javax.swing.DefaultListModel;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXPasswordField;
import com.jfoenix.controls.JFXTextField;

import Home.Home;
import Home.UserController;
import Socket.Message;
import Socket.SocketClient;
import database.LoginModel;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

public class TaiKhoanCtrl implements Initializable {

	public SocketClient client;

	public int port;

	public boolean _login;

	public String serverAddr, username, password;
	public Thread clientThread;

	@FXML
	private JFXButton btnClose;
	@FXML
	public JFXButton btnConn;

	// public DefaultListModel model;
	public LoginModel loginModel = new LoginModel();
	public Home home = new Home();

	@FXML
	public Label isConnected;
	@FXML
	public JFXTextField txtUsername;
	@FXML
	public JFXTextField txtPort;

	@FXML
	public JFXPasswordField txtPassword;

	@Override
	public void initialize(java.net.URL location, ResourceBundle resources) {

	}

	public void Connect(ActionEvent event) {
		/*
		 * serverAddr = "localhost"; port = Integer.parseInt(txtPort.getText());
		 * 
		 * if (!serverAddr.isEmpty() && !txtPort.getText().isEmpty()) { try { client =
		 * new SocketClient(this); clientThread = new Thread(client);
		 * clientThread.start(); client.send(new Message("test", "testUser",
		 * "testContent", "SERVER"));
		 * 
		 * } catch (Exception ex) { isConnected.setText("Server not found\n"); } }
		 */
	}

	public void Login(ActionEvent event) throws Exception {
		serverAddr = "localhost";
		port = Integer.parseInt(txtPort.setText("62000");

		username = txtUsername.getText();
		password = txtPassword.getText();
		if (!serverAddr.isEmpty() && !txtPort.getText().isEmpty()) {
			try {
				client = new SocketClient(this);
				clientThread = new Thread(client);
				clientThread.start();
				// client.send(new Message("test", "testUser", "testContent", "SERVER"));
				if (!username.isEmpty() && !password.isEmpty()) {
					client.send(new Message("login", username, password, "SERVER"));

				}

			} catch (Exception ex) {
				isConnected.setText("Server not found\n");
			}
		}

	}
	
	
	public void goHome() throws IOException {
		
		Stage stage=new Stage();
        stage.initStyle(StageStyle.TRANSPARENT);
        FXMLLoader fxmlLoader=new FXMLLoader(getClass().getResource("/view/a.fxml"));
        stage.setScene(new Scene(fxmlLoader.load()));
        stage.getScene().setFill(Color.TRANSPARENT);
      
        ((Stage)txtPassword.getScene().getWindow()).close();
        stage.show();
		
	}

	@FXML
	void Close(ActionEvent event) {
		System.exit(0);
	}

}
